# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions


name: Python Package Creation

on:
  push:
    branches: [ "main", "gui_integration" ]


jobs:
  bumpversion:
    if: "contains(github.event.head_commit.message, '#bump')"
    runs-on: [ ubuntu-24.04 ]
    steps:
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        #RELEASE_BRANCHES: main
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        WITH_V: true
        PRERELEASE: true
  linuxbuild:
    needs: bumpversion
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
             os: [ubuntu-24.04, ubuntu-22.04]
             python-version: [ 3.11.9 ]
    if: "contains(github.event.head_commit.message, '#linuxbuild')"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build Package files
      working-directory: ./
      env:
        SUPER_SECRET: ${{ secrets.GIT_INFO }}
        GEMFURY_TOKEN: ${{ secrets.GEMFURY_TOKEN }}
      run: |
        pip install wheel
        pip install -r requirements.txt
        python3 builder.py "$SUPER_SECRET" "$GEMFURY_TOKEN"

  macbuild:
    needs: bumpversion
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-12, macos-13, macos-14, macos-latest ]
        python-version: [ 3.11.9 ]
    if: "contains(github.event.head_commit.message, '#macbuild')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Package files
        working-directory: ./
        env:
          SUPER_SECRET: ${{ secrets.GIT_INFO }}
          GEMFURY_TOKEN: ${{ secrets.GEMFURY_TOKEN }}
        run: |
          pip3 install wheel
          pip3 install -r requirements.txt
          python3 builder.py "$SUPER_SECRET" "$GEMFURY_TOKEN"
#  winbuild:
#    needs: linuxbuild
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        python-version: [ 3.11.9 ]
#    if: "contains(github.event.head_commit.message, '#buildpackage')"
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: '0'
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Build Package files
#        working-directory: .
#        env:
#          SUPER_SECRET: ${{ secrets.GIT_INFO }}
#          GEMFURY_TOKEN: ${{ secrets.GEMFURY_TOKEN }}
#        run: |
#          pip3 install wheel
#          pip3 install -r requirements.txt
#          python3 builder.py "https://github.com/disys-lab/gustavo.git" "$GEMFURY_TOKEN"
#


